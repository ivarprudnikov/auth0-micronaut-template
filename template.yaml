AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Micronaut server utilizing proxy requests through API Gateway
# SAM spec: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md
# SAM is CF, therefore Cloud Formation spec: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html
# SAM Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Runtime: java8
    Timeout: 20
    MemorySize: 1024
  Api:
    EndpointConfiguration: EDGE
    # https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#cors-configuration
    Cors:
      AllowOrigin: "'https://ivarprudnikov.github.io'"
      AllowCredentials: true
      AllowHeaders: "'*'"
      AllowMethods: "'*'"

Resources:
  MainFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: auth0-micronaut-template-server
      Description: Micronaut server running behing StreamLambdaHandler
      CodeUri: build/libs/auth0-micronaut-template-1.0-all.jar
      Handler: com.ivarprudnikov.auth0.StreamLambdaHandler::handleRequest
      Events:
        # hardcoded root / endpoint, otherwise locally does not respond
        RootEndpoint:
          Type: Api
          Properties:
            Path: /
            Method: any
        GetResource:
          Type: Api
          Properties:
            Path: /{proxy+}
            Method: any

Outputs:
  ApiUrl:
    # here /Prod refers to implicitly created Prod stage
    Description: Main lambda endpoint
    Value: !Sub 'https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/'
  MainFunction:
    Description: Lambda function ARN
    Value: !GetAtt MainFunction.Arn
